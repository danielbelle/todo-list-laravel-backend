name: Tasks
description: |-

  API for managing tasks

  This API provides complete CRUD operations for task management with filtering,
  pagination, and status updates. No authentication is required.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/tasks
    metadata:
      groupName: Tasks
      groupDescription: |-

        API for managing tasks

        This API provides complete CRUD operations for task management with filtering,
        pagination, and status updates. No authentication is required.
      subgroup: ''
      subgroupDescription: ''
      title: 'List all tasks'
      description: 'Get a paginated list of tasks with optional filtering capabilities.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number for pagination.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of items per page (1-100).'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      completed:
        name: completed
        description: 'Filter by completion status.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search term to filter tasks by title.'
        required: false
        example: important
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 15
      completed: true
      search: important
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "title": "Complete project documentation",
                "completed": true,
                "status": "completed",
                "created_at": "2025-09-21T10:00:00.000000Z",
                "updated_at": "2025-09-21T10:30:00.000000Z",
                "deleted_at": null,
                "is_deleted": false
              }
            ],
            "meta": {
              "total": 25,
              "per_page": 15,
              "current_page": 1,
              "last_page": 2,
              "from": 1,
              "to": 15
            },
            "links": {
              "first": "http://localhost/api/v1/tasks?page=1",
              "last": "http://localhost/api/v1/tasks?page=2",
              "prev": null,
              "next": "http://localhost/api/v1/tasks?page=2"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Internal server error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tasks
    metadata:
      groupName: Tasks
      groupDescription: |-

        API for managing tasks

        This API provides complete CRUD operations for task management with filtering,
        pagination, and status updates. No authentication is required.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new task'
      description: 'Create a new task with the provided title.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task. Must be at least 3 characters.'
        required: true
        example: 'Learn Laravel'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Learn Laravel'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "title": "Learn Laravel",
              "completed": false,
              "status": "pending",
              "created_at": "2025-09-21T10:00:00.000000Z",
              "updated_at": "2025-09-21T10:00:00.000000Z",
              "deleted_at": null,
              "is_deleted": false
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "title": [
                "The title field is required.",
                "The title must be at least 3 characters."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Could not create task"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: Tasks
      groupDescription: |-

        API for managing tasks

        This API provides complete CRUD operations for task management with filtering,
        pagination, and status updates. No authentication is required.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific task'
      description: 'Retrieve details of a single task by its ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "title": "Complete project documentation",
              "completed": true,
              "status": "completed",
              "created_at": "2025-09-21T10:00:00.000000Z",
              "updated_at": "2025-09-21T10:30:00.000000Z",
              "deleted_at": null,
              "is_deleted": false
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Task not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Internal server error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: Tasks
      groupDescription: |-

        API for managing tasks

        This API provides complete CRUD operations for task management with filtering,
        pagination, and status updates. No authentication is required.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a task'
      description: "Update an existing task's title and/or completion status."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The new title of the task. Must be at least 3 characters.'
        required: false
        example: 'Updated task title'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      completed:
        name: completed
        description: 'The completion status of the task.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Updated task title'
      completed: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "title": "Updated task title",
              "completed": true,
              "status": "completed",
              "created_at": "2025-09-21T10:00:00.000000Z",
              "updated_at": "2025-09-21T10:35:00.000000Z",
              "deleted_at": null,
              "is_deleted": false
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Task not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "title": [
                "The title must be at least 3 characters."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Could not update task"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: Tasks
      groupDescription: |-

        API for managing tasks

        This API provides complete CRUD operations for task management with filtering,
        pagination, and status updates. No authentication is required.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a task'
      description: 'Soft delete a task (can be restored if needed).'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Task not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Internal server error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tasks/{id}/complete'
    metadata:
      groupName: Tasks
      groupDescription: |-

        API for managing tasks

        This API provides complete CRUD operations for task management with filtering,
        pagination, and status updates. No authentication is required.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark task as complete'
      description: 'Mark a specific task as completed.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task to mark as complete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "title": "Complete project documentation",
              "completed": true,
              "status": "completed",
              "created_at": "2025-09-21T10:00:00.000000Z",
              "updated_at": "2025-09-21T10:40:00.000000Z",
              "deleted_at": null,
              "is_deleted": false
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Task not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Could not complete task"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Could not complete task"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tasks/{id}/pending'
    metadata:
      groupName: Tasks
      groupDescription: |-

        API for managing tasks

        This API provides complete CRUD operations for task management with filtering,
        pagination, and status updates. No authentication is required.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark task as pending'
      description: 'Mark a specific task as pending (not completed).'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task to mark as pending.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "title": "Complete project documentation",
              "completed": false,
              "status": "pending",
              "created_at": "2025-09-21T10:00:00.000000Z",
              "updated_at": "2025-09-21T10:45:00.000000Z",
              "deleted_at": null,
              "is_deleted": false
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Task not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Could not mark task as pending"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Could not mark task as pending"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
